# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -mcpu=mos65c02 -run-pass=branch-relaxation -verify-machineinstrs -o - %s | FileCheck %s -check-prefixes=65C02
# RUN: llc -mtriple=mos -mcpu=mos65dtv02 -run-pass=branch-relaxation -verify-machineinstrs -o - %s | FileCheck %s -check-prefixes=65DTV02
---
name: far_branch
tracksRegLiveness: true
body: |
  ; 65C02-LABEL: name: far_branch
  ; 65C02: bb.0.entry:
  ; 65C02-NEXT:   successors: %bb.1(0x80000000)
  ; 65C02-NEXT: {{  $}}
  ; 65C02-NEXT:   BRA %bb.1
  ; 65C02-NEXT: {{  $}}
  ; 65C02-NEXT: bb.1:
  ; 65C02-NEXT:   successors: %bb.1(0x80000000)
  ; 65C02-NEXT: {{  $}}
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT:   BRA %bb.1
  ; 65C02-NEXT: {{  $}}
  ; 65C02-NEXT: bb.2:
  ; 65C02-NEXT:   successors: %bb.4(0x80000000)
  ; 65C02-NEXT: {{  $}}
  ; 65C02-NEXT:   $a = LDImm 0
  ; 65C02-NEXT: {{  $}}
  ; 65C02-NEXT: bb.4:
  ; 65C02-NEXT:   successors: %bb.1(0x80000000)
  ; 65C02-NEXT: {{  $}}
  ; 65C02-NEXT:   JMP %bb.1
  ; 65C02-NEXT: {{  $}}
  ; 65C02-NEXT: bb.3:
  ; 65C02-NEXT:   RTS
  ; 65DTV02-LABEL: name: far_branch
  ; 65DTV02: bb.0.entry:
  ; 65DTV02-NEXT:   successors: %bb.1(0x80000000)
  ; 65DTV02-NEXT: {{  $}}
  ; 65DTV02-NEXT:   BRA %bb.1
  ; 65DTV02-NEXT: {{  $}}
  ; 65DTV02-NEXT: bb.1:
  ; 65DTV02-NEXT:   successors: %bb.1(0x80000000)
  ; 65DTV02-NEXT: {{  $}}
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT:   BRA %bb.1
  ; 65DTV02-NEXT: {{  $}}
  ; 65DTV02-NEXT: bb.2:
  ; 65DTV02-NEXT:   successors: %bb.4(0x80000000)
  ; 65DTV02-NEXT: {{  $}}
  ; 65DTV02-NEXT:   $a = LDImm 0
  ; 65DTV02-NEXT: {{  $}}
  ; 65DTV02-NEXT: bb.4:
  ; 65DTV02-NEXT:   successors: %bb.1(0x80000000)
  ; 65DTV02-NEXT: {{  $}}
  ; 65DTV02-NEXT:   JMP %bb.1
  ; 65DTV02-NEXT: {{  $}}
  ; 65DTV02-NEXT: bb.3:
  ; 65DTV02-NEXT:   RTS
  bb.0.entry:
    BRA %bb.1

  bb.1:
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    $a = LDImm 0
    ; This BRA is kept
    BRA %bb.1

  bb.2:
    $a = LDImm 0
    ; This BRA is relaxed to JMP
    BRA %bb.1

  bb.3:
    RTS
...
