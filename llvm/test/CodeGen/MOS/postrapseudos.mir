# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=postrapseudos -verify-machineinstrs -o - %s | FileCheck %s
---
name: inc_a
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: inc_a
    ; CHECK: $a = INC $a, implicit-def $c, implicit-def $v
    $a = INC $a, implicit-def $c, implicit-def $v
...
---
name: inc_a_z
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: inc_a_z
    ; CHECK: $a = INC $a, implicit-def $c, implicit-def $v, implicit-def $z
    $a = INC $a, implicit-def $c, implicit-def $v, implicit-def $z
...
---
name: inc_xy
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: inc_xy
    ; CHECK: $x = INC $x, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: $y = INC $y, implicit-def $c, implicit-def $v
    $x = INC $x, implicit-def $c, implicit-def $v
    $y = INC $y, implicit-def $c, implicit-def $v
...
---
name: inc_imag8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: inc_imag8
    ; CHECK: $rc0 = INC $rc0, implicit-def $c, implicit-def $v
    $rc0 = INC $rc0, implicit-def $c, implicit-def $v
...
---
name: dec_a
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: dec_a
    ; CHECK: $a = DEC $a, implicit-def $c, implicit-def $v
    $a = DEC $a, implicit-def $c, implicit-def $v
...
---
name: dec_xy
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: dec_xy
    ; CHECK: $x = DEC $x, implicit-def $c, implicit-def $v
    ; CHECK-NEXT: $y = DEC $y, implicit-def $c, implicit-def $v
    $x = DEC $x, implicit-def $c, implicit-def $v
    $y = DEC $y, implicit-def $c, implicit-def $v
...
---
name: dec_imag8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: dec_imag8
    ; CHECK: $rc0 = DEC $rc0, implicit-def $c, implicit-def $v
    $rc0 = DEC $rc0, implicit-def $c, implicit-def $v
...
---
name: cmpbrimm
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cmpbrimm
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $c = CMPImm $a, 42, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1
    ; CHECK-NEXT: RTS
    CmpBrImm %bb.0, undef $z, 1, $a, 42, implicit-def $c
    RTS
...
---
name: cmpbrimag8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cmpbrimag8
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $c = CMPImag8 $a, $rc2, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1
    ; CHECK-NEXT: RTS
    CmpBrImag8 %bb.0, undef $z, 1, $a, $rc2, implicit-def $c
    RTS
...
---
name: cmpbrzero
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cmpbrzero
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: CmpZero $a, implicit-def $c, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1
    ; CHECK-NEXT: RTS
    CmpBrZero %bb.0.entry, $z, 1, $a, implicit-def $c
    RTS
...
---
name: cmpbrzpidx
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cmpbrzpidx
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $c = CMPZpIdx $a, 123, $x, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1
    ; CHECK-NEXT: RTS
    CmpBrZpIdx %bb.0, undef $z, 1, $a, 123, $x, implicit-def $c
    RTS
...
---
name: cmpbrabs
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cmpbrabs
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $c = CMPAbs $a, 1234, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1
    ; CHECK-NEXT: RTS
    CmpBrAbs %bb.0, undef $z, 1, $a, 1234, implicit-def $c
    RTS
...
---
name: cmpbrabsidx
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cmpbrabsidx
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $c = CMPAbsIdx $a, 1234, $x, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1
    ; CHECK-NEXT: RTS
    CmpBrAbsIdx %bb.0, undef $z, 1, $a, 1234, $x, implicit-def $c
    RTS
...
---
name: cmpbrindir
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cmpbrindir
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $c = CMPIndir $a, $rs1, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1
    ; CHECK-NEXT: RTS
    CmpBrIndir %bb.0, undef $z, 1, $a, $rs1, implicit-def $c
    RTS
...
---
name: cmpbrindiridx
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: cmpbrindiridx
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $c = CMPIndirIdx $a, $rs1, $y, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1
    ; CHECK-NEXT: RTS
    CmpBrIndirIdx %bb.0, undef $z, 1, $a, $rs1, $y, implicit-def $c
    RTS
...
---
name: br_c
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: br_c
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: BR %bb.0, $c, 1, implicit-def $c
    ; CHECK-NEXT: RTS
    GBR %bb.0.entry, $c, 1, implicit-def $c
    RTS
...
---
name: br_v
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: br_v
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: BR %bb.0, $v, 1, implicit-def $c
    ; CHECK-NEXT: RTS
    GBR %bb.0.entry, $v, 1, implicit-def $c
    RTS
...
---
name: br_alsb_0
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: br_alsb_0
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: CmpZero $a, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 1, implicit-def $c
    ; CHECK-NEXT: RTS
    GBR %bb.0.entry, $alsb, 0, implicit-def $c
    RTS
...
---
name: br_alsb_1
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: br_alsb_1
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: CmpZero $a, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 0, implicit-def $c
    ; CHECK-NEXT: RTS
    GBR %bb.0.entry, $alsb, 1, implicit-def $c
    RTS
...
---
name: br_xlsb
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: br_xlsb
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: CmpZero $x, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 0, implicit-def $c
    ; CHECK-NEXT: RTS
    GBR %bb.0.entry, $xlsb, 1, implicit-def $c
    RTS
...
---
name: br_ylsb
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: br_ylsb
    ; CHECK: successors: %bb.0(0x80000000)
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: CmpZero $y, implicit-def $c, implicit-def $z
    ; CHECK-NEXT: BR %bb.0, killed $z, 0, implicit-def $c
    ; CHECK-NEXT: RTS
    GBR %bb.0.entry, $ylsb, 1, implicit-def $c
    RTS
...
---
name: incptr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: incptr
    ; CHECK: $rc2, $rc3 = IncMB $rc2(tied-def 0), $rc3(tied-def 1), implicit-def $c, implicit-def $v
    ; CHECK-NEXT: RTS
    $rs1 = IncPtr $rs1, implicit-def $c, implicit-def $v
    RTS
...
---
name: decptr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: decptr
    ; CHECK: early-clobber $a, $rc2, $rc3 = DecMB $rc2(tied-def 1), $rc3(tied-def 2), implicit-def $c, implicit-def $v
    ; CHECK-NEXT: RTS
    $a, $rs1 = DecPtr $rs1, implicit-def $c, implicit-def $v
    RTS
...
---
name: ldaabsidx
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldaabsidx
    ; CHECK: $a = LDAAbsIdx 1234, $x
    $a = LDAbsIdx 1234, $x
...
---
name: ldxabsidx_y
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldxabsidx_y
    ; CHECK: $x = LDXIdx 1234, $y
    $x = LDAbsIdx 1234, $y
...
---
name: ldxabsidx_x
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldxabsidx_x
    ; CHECK: [[LDAAbsIdx:%[0-9]+]]:ac = LDAAbsIdx 1234, $x
    ; CHECK-NEXT: $x = TA [[LDAAbsIdx]]
    ; CHECK-NEXT: $c = CMPImm $a, 0
    $x = LDAbsIdx 1234, $x
    $c = CMPImm $a, 0
...
---
name: ldyabsidx_x
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldyabsidx_x
    ; CHECK: $y = LDYIdx 1234, $x
    $y = LDAbsIdx 1234, $x
...
---
name: ldimm1_lsb
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldimm1_lsb
    ; CHECK: $a = LDImm 1
    $alsb = LDImm1 -1
...
---
name: ldcimm
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldcimm
    ; CHECK: $c = LDCImm -1
    $c = LDImm1 -1
...
---
name: set_v
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: set_v
    ; CHECK: $v = BITAbs undef $a, &__set_v
    $v = LDImm1 -1
...
---
name: clv
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: clv
    ; CHECK: $v = CLV
    $v = LDImm1 0
...
---
name: ldimm16
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldimm16
    ; CHECK: $a = LDImm 210
    ; CHECK-NEXT: $rc2 = STImag8 $a
    ; CHECK-NEXT: $a = LDImm 4
    ; CHECK-NEXT: $rc3 = STImag8 $a
    $rs1, $a = LDImm16 1234
...
---
name: ldimm16remat
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldimm16remat
    ; CHECK: [[LDImm:%[0-9]+]]:gpr = LDImm 210
    ; CHECK-NEXT: $rc2 = STImag8 [[LDImm]]
    ; CHECK-NEXT: [[LDImm:%[0-9]+]]:gpr = LDImm 4, implicit [[LDImm]]
    ; CHECK-NEXT: $rc3 = STImag8 [[LDImm]]
    $rs1 = LDImm16Remat 1234
...
---
name: ldzimag8
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldzimag8
    ; CHECK: $rc0 = STZImag8
    $rc0 = LDZ
...
---
name: ldzgpr
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldzgpr
    ; CHECK: $a = LDImm 0
    $a = LDZ
...
