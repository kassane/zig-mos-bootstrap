; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -passes=indvars -verify-each -S %s | FileCheck %s

; ModuleID = '/home/mysterymath/nesrender/texture.cc'
source_filename = "/home/mysterymath/nesrender/texture.cc"
target datalayout = "e-m:e-p:16:8-p1:8:8-i16:8-i32:8-i64:8-f32:8-f64:8-a:8-Fi8-n8"
target triple = "mos-nes-mmc1"

%class.SpanBuffer = type { i8, %"class.soa::Array" }
%"class.soa::Array" = type { [2 x [42 x i8]] }
%struct.TextureColumn = type { i8, [0 x %struct.TextureSpan] }
%struct.TextureSpan = type { i8, i8 }

@span_buffer = external dso_local global %class.SpanBuffer, align 1

; Function Attrs: mustprogress noinline nounwind optsize
define dso_local void @_ZNK13TextureColumn6renderEv(ptr nocapture noundef nonnull readonly align 1 dereferenceable(1) %this) local_unnamed_addr #1 align 2 {
; CHECK-LABEL: define dso_local void @_ZNK13TextureColumn6renderEv
; CHECK-SAME: (ptr nocapture noundef nonnull readonly align 1 dereferenceable(1) [[THIS:%.*]]) local_unnamed_addr #[[ATTR0:[0-9]+]] align 2 {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    tail call void @_ZN10SpanBuffer5clearEv(ptr noundef nonnull align 1 dereferenceable(85) @span_buffer) #[[ATTR2:[0-9]+]]
; CHECK-NEXT:    [[TMP0:%.*]] = load i8, ptr [[THIS]], align 1, !tbaa [[TBAA3:![0-9]+]]
; CHECK-NEXT:    [[CMP20:%.*]] = icmp eq i8 [[TMP0]], 0
; CHECK-NEXT:    br i1 [[CMP20]], label [[FOR_COND_CLEANUP:%.*]], label [[FOR_BODY_PREHEADER:%.*]]
; CHECK:       for.body.preheader:
; CHECK-NEXT:    br label [[FOR_BODY:%.*]]
; CHECK:       for.cond.cleanup.loopexit:
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP]]
; CHECK:       for.cond.cleanup:
; CHECK-NEXT:    ret void
; CHECK:       for.body:
; CHECK-NEXT:    [[REMAINING_022:%.*]] = phi i8 [ [[SUB:%.*]], [[IF_END:%.*]] ], [ 42, [[FOR_BODY_PREHEADER]] ]
; CHECK-NEXT:    [[I_021:%.*]] = phi i8 [ [[INC:%.*]], [[IF_END]] ], [ 0, [[FOR_BODY_PREHEADER]] ]
; CHECK-NEXT:    [[INDVARS1:%.*]] = zext i8 [[I_021]] to i16
; CHECK-NEXT:    [[ARRAYIDX:%.*]] = getelementptr inbounds [[STRUCT_TEXTURECOLUMN:%.*]], ptr [[THIS]], i16 0, i32 1, i16 [[INDVARS1]]
; CHECK-NEXT:    [[SIZE3:%.*]] = getelementptr inbounds [[STRUCT_TEXTURECOLUMN]], ptr [[THIS]], i16 0, i32 1, i16 [[INDVARS1]], i32 1
; CHECK-NEXT:    [[TMP1:%.*]] = load i8, ptr [[SIZE3]], align 1, !tbaa [[TBAA6:![0-9]+]]
; CHECK-NEXT:    [[CMP6:%.*]] = icmp ugt i8 [[TMP1]], [[REMAINING_022]]
; CHECK-NEXT:    br i1 [[CMP6]], label [[IF_THEN:%.*]], label [[IF_END]]
; CHECK:       if.then:
; CHECK-NEXT:    br label [[IF_END]]
; CHECK:       if.end:
; CHECK-NEXT:    [[SPAN_SIZE_0:%.*]] = phi i8 [ [[REMAINING_022]], [[IF_THEN]] ], [ [[TMP1]], [[FOR_BODY]] ]
; CHECK-NEXT:    [[TMP2:%.*]] = load i8, ptr [[ARRAYIDX]], align 1, !tbaa [[TBAA8:![0-9]+]]
; CHECK-NEXT:    tail call void @_ZN10SpanBuffer9push_backE4Span(ptr noundef nonnull align 1 dereferenceable(85) @span_buffer, i8 [[TMP2]], i8 [[SPAN_SIZE_0]]) #[[ATTR2]]
; CHECK-NEXT:    [[SUB]] = sub i8 [[REMAINING_022]], [[SPAN_SIZE_0]]
; CHECK-NEXT:    [[INC]] = add nuw i8 [[I_021]], 1
; CHECK-NEXT:    [[TMP3:%.*]] = load i8, ptr [[THIS]], align 1, !tbaa [[TBAA3]]
; CHECK-NEXT:    [[CMP:%.*]] = icmp uge i8 [[INC]], [[TMP3]]
; CHECK-NEXT:    [[TOBOOL_NOT:%.*]] = icmp eq i8 [[SUB]], 0
; CHECK-NEXT:    [[OR_COND:%.*]] = or i1 [[CMP]], [[TOBOOL_NOT]]
; CHECK-NEXT:    br i1 [[OR_COND]], label [[FOR_COND_CLEANUP_LOOPEXIT:%.*]], label [[FOR_BODY]], !llvm.loop [[LOOP9:![0-9]+]]
;
entry:
  tail call void @_ZN10SpanBuffer5clearEv(ptr noundef nonnull align 1 dereferenceable(85) @span_buffer) #3
  %0 = load i8, ptr %this, align 1, !tbaa !3
  %cmp20 = icmp eq i8 %0, 0
  br i1 %cmp20, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %if.end
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  ret void

for.body:                                         ; preds = %for.body.preheader, %if.end
  %conv23 = phi i16 [ %conv, %if.end ], [ 0, %for.body.preheader ]
  %remaining.022 = phi i8 [ %sub, %if.end ], [ 42, %for.body.preheader ]
  %i.021 = phi i8 [ %inc, %if.end ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr inbounds %struct.TextureColumn, ptr %this, i16 0, i32 1, i16 %conv23
  %size3 = getelementptr inbounds %struct.TextureColumn, ptr %this, i16 0, i32 1, i16 %conv23, i32 1
  %1 = load i8, ptr %size3, align 1, !tbaa !6
  %cmp6 = icmp ugt i8 %1, %remaining.022
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %span_size.0 = phi i8 [ %remaining.022, %if.then ], [ %1, %for.body ]
  %2 = load i8, ptr %arrayidx, align 1, !tbaa !8
  tail call void @_ZN10SpanBuffer9push_backE4Span(ptr noundef nonnull align 1 dereferenceable(85) @span_buffer, i8 %2, i8 %span_size.0) #3
  %sub = sub i8 %remaining.022, %span_size.0
  %inc = add nuw i8 %i.021, 1
  %conv = zext i8 %inc to i16
  %3 = load i8, ptr %this, align 1, !tbaa !3
  %cmp = icmp uge i8 %inc, %3
  %tobool.not = icmp eq i8 %sub, 0
  %or.cond = or i1 %cmp, %tobool.not
  br i1 %or.cond, label %for.cond.cleanup.loopexit, label %for.body, !llvm.loop !9
}

; Function Attrs: optsize
declare dso_local void @_ZN10SpanBuffer5clearEv(ptr noundef nonnull align 1 dereferenceable(85)) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local void @_ZN10SpanBuffer9push_backE4Span(ptr noundef nonnull align 1 dereferenceable(85), i8, i8) local_unnamed_addr #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { mustprogress noinline nounwind optsize "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #2 = { optsize "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #3 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"frame-pointer", i32 2}
!2 = !{!"clang version 18.0.0 (git@github.com:llvm-mos/llvm-mos.git d67d16b862d0f425d667ea06abe83b737521f5a8)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C++ TBAA"}
!6 = !{!7, !4, i64 1}
!7 = !{!"_ZTS11TextureSpan", !4, i64 0, !4, i64 1}
!8 = !{!7, !4, i64 0}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}

